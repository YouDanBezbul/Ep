local Library = {}

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomGUI"
ScreenGui.Parent = game.CoreGui

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true -- Thêm dòng này
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Size = UDim2.new(1, 0, 0, 30)
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TopBar.BorderSizePixel = 0
TopBar.Parent = MainFrame

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = TopBar

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Custom GUI"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18
Title.Font = Enum.Font.SourceSansBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TopBar

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = TabHolder

local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Size = UDim2.new(0, 100, 1, -30)
TabContainer.Position = UDim2.new(0, 0, 0, 30)
TabContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TabContainer.BorderSizePixel = 0
TabContainer.Parent = MainFrame

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = TabContainer

local TabContent = Instance.new("Frame")
TabContent.Name = "TabContent"
TabContent.Size = UDim2.new(1, -100, 1, -30)
TabContent.Position = UDim2.new(0, 100, 0, 30)
TabContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabContent.BorderSizePixel = 0
TabContent.Parent = MainFrame

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = TabContent

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)
UIListLayout.Parent = TabContainer

local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Size = UDim2.new(1, 0, 1, -30)
ContentContainer.Position = UDim2.new(0, 0, 0, 30)
ContentContainer.BackgroundTransparency = 1
ContentContainer.Parent = MainFrame

-- Tạo nút Minimize
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -30, 0, 0)
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 24
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Parent = TopBar

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = MinimizeButton

local TabButtons = {}
local Tabs = {}

-- Tạo Tab
function Library:CreateTab(name)
    local TabButton = Instance.new("TextButton")
    TabButton.Name = name
    TabButton.Size = UDim2.new(1, 0, 0, 30)
    TabButton.Position = UDim2.new(0, 0, 0, #TabButtons * 30)
    TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabButton.BorderSizePixel = 0
    TabButton.Text = name
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Font = Enum.Font.SourceSans
    TabButton.TextSize = 16
    TabButton.Parent = TabContainer
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = TabButton
    
    local Tab = Instance.new("ScrollingFrame")
    Tab.Name = name
    Tab.Size = UDim2.new(1, 0, 1, 0)
    Tab.BackgroundTransparency = 1
    Tab.BorderSizePixel = 0
    Tab.ScrollBarThickness = 4
    Tab.Visible = false
    Tab.Parent = TabContent
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = Tab
    
    table.insert(TabButtons, TabButton)
    table.insert(Tabs, Tab)
    
TabButton.MouseButton1Click:Connect(function()
        for _, button in ipairs(TabButtons) do
            button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        end
        TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        
        for _, tab in ipairs(Tabs) do
            tab.Visible = false
        end
        Tab.Visible = true
    end)
    
    if #TabButtons == 1 then
        TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Tab.Visible = true
    end
    
    local TabFunctions = {}
    
    -- Tạo Button
    function TabFunctions:CreateButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Name = text
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Button.BorderSizePixel = 0
        Button.Text = text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.Font = Enum.Font.SourceSans
        Button.TextSize = 16
        Button.Parent = Tab
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = Button
        
        Button.MouseButton1Click:Connect(callback)
    end
    
    -- Tạo Toggle
        function TabFunctions:CreateToggle(text, default, callback)
        local Toggle = Instance.new("Frame")
        Toggle.Name = text
        Toggle.Size = UDim2.new(1, -10, 0, 30)
        Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        Toggle.BorderSizePixel = 0
        Toggle.Parent = Tab
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = Toggle
        
        local ToggleButton = Instance.new("TextButton")
        ToggleButton.Name = "ToggleButton"
        ToggleButton.Size = UDim2.new(0, 20, 0, 20)
        ToggleButton.Position = UDim2.new(0, 5, 0.5, -10)
        ToggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        ToggleButton.BorderSizePixel = 0
        ToggleButton.Text = ""
        ToggleButton.Parent = Toggle
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = ToggleButton
        
        local TextLabel = Instance.new("TextLabel")
        TextLabel.Size = UDim2.new(1, -30, 1, 0)
        TextLabel.Position = UDim2.new(0, 30, 0, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.Text = text
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.TextSize = 16
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        TextLabel.Parent = Toggle
        
        local toggled = default
        ToggleButton.MouseButton1Click:Connect(function()
            toggled = not toggled
            ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            callback(toggled)
        end)
    end
    
    -- Tạo Section
    function Tab:CreateSection(text)
        local Section = Instance.new("Frame")
        Section.Name = text
        Section.Size = UDim2.new(1, -10, 0, 30)
        Section.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        Section.Parent = TabContent
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = Section
        
        local TextLabel = Instance.new("TextLabel")
        TextLabel.Size = UDim2.new(1, 0, 1, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.Text = text
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.Parent = Section
    end
    
    -- Tạo ColorPicker
    function Tab:CreateColorPicker(text, default, callback)
        local ColorPicker = Instance.new("Frame")
        ColorPicker.Name = text
        ColorPicker.Size = UDim2.new(1, -10, 0, 30)
        ColorPicker.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        ColorPicker.Parent = TabContent
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = ColorPicker
        
        local TextLabel = Instance.new("TextLabel")
        TextLabel.Size = UDim2.new(1, -40, 1, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.Text = text
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        TextLabel.Parent = ColorPicker
        
        local ColorDisplay = Instance.new("Frame")
        ColorDisplay.Name = "ColorDisplay"
        ColorDisplay.Size = UDim2.new(0, 30, 0, 20)
        ColorDisplay.Position = UDim2.new(1, -35, 0.5, -10)
        ColorDisplay.BackgroundColor3 = default
        ColorDisplay.Parent = ColorPicker
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = ColorDisplay
        
        ColorDisplay.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                local ColorPicker = game:GetService("CoreGui"):FindFirstChild("ColorPicker") or Instance.new("ScreenGui")
                ColorPicker.Name = "ColorPicker"
                ColorPicker.Parent = game:GetService("CoreGui")
                
                local Frame = Instance.new("Frame")
                Frame.Size = UDim2.new(0, 200, 0, 220)
                Frame.Position = UDim2.new(0.5, -100, 0.5, -110)
                Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                Frame.Parent = ColorPicker
                
                local UICorner = Instance.new("UICorner")
                UICorner.CornerRadius = UDim.new(0, 10)
                UICorner.Parent = Frame
                
                local ColorWheel = Instance.new("ImageButton")
                ColorWheel.Name = "ColorWheel"
                ColorWheel.Image = "rbxassetid://6020299385"
                ColorWheel.Size = UDim2.new(0, 180, 0, 180)
                ColorWheel.Position = UDim2.new(0.5, -90, 0, 10)
                ColorWheel.Parent = Frame
                
                local Picker = Instance.new("ImageLabel")
                Picker.Name = "Picker"
                Picker.Image = "rbxassetid://3678860011"
                Picker.Size = UDim2.new(0, 18, 0, 18)
                Picker.Position = UDim2.new(0.5, -9, 0.5, -9)
                Picker.BackgroundTransparency = 1
                Picker.Parent = ColorWheel
                
                local DoneButton = Instance.new("TextButton")
                DoneButton.Name = "DoneButton"
                DoneButton.Size = UDim2.new(1, -20, 0, 20)
                DoneButton.Position = UDim2.new(0, 10, 1, -30)
                DoneButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                DoneButton.Text = "Done"
                DoneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                DoneButton.Parent = Frame
                
                local UICorner = Instance.new("UICorner")
                UICorner.CornerRadius = UDim.new(0, 5)
                UICorner.Parent = DoneButton
                
                local function updateColor()
                    local mousePosition = game:GetService("UserInputService"):GetMouseLocation() - ColorWheel.AbsolutePosition
                    local centerPoint = ColorWheel.AbsoluteSize / 2
                    local radius = ColorWheel.AbsoluteSize.X / 2
                    
                    local angle = math.atan2(mousePosition.Y - centerPoint.Y, mousePosition.X - centerPoint.X)
                    local distance = math.min((mousePosition - centerPoint).Magnitude, radius)
                    
                    local pickerPosition = UDim2.new(0.5 + math.cos(angle) * (distance / radius) / 2, -9, 0.5 + math.sin(angle) * (distance / radius) / 2, -9)
                    Picker.Position = pickerPosition
                    
                    local hue = (angle + math.pi) / (2 * math.pi)
                    local saturation = distance / radius
                    local value = 1
                    
                    local color = Color3.fromHSV(hue, saturation, value)
                    ColorDisplay.BackgroundColor3 = color
                    callback(color)
                end
                
                ColorWheel.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        local connection
                        connection = game:GetService("RunService").RenderStepped:Connect(function()
                            if game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                                updateColor()
                            else
                                connection:Disconnect()
                            end
                        end)
                    end
                end)
                
                DoneButton.MouseButton1Click:Connect(function()
                    ColorPicker:Destroy()
                end)
            end
        end)
    end
    
    -- Tạo Slider
    function Tab:CreateSlider(text, min, max, default, callback)
        local Slider = Instance.new("Frame")
        Slider.Name = text
        Slider.Size = UDim2.new(1, -10, 0, 50)
        Slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Slider.Parent = TabContent
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = Slider
        
        local TextLabel = Instance.new("TextLabel")
        TextLabel.Size = UDim2.new(1, 0, 0, 20)
        TextLabel.BackgroundTransparency = 1
        TextLabel.Text = text
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        TextLabel.Parent = Slider
        
        local SliderBar = Instance.new("Frame")
        SliderBar.Name = "SliderBar"
        SliderBar.Size = UDim2.new(1, -20, 0, 5)
        SliderBar.Position = UDim2.new(0, 10, 1, -15)
        SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        SliderBar.Parent = Slider
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 2)
        UICorner.Parent = SliderBar
        
        local SliderButton = Instance.new("TextButton")
        SliderButton.Name = "SliderButton"
        SliderButton.Size = UDim2.new(0, 10, 0, 20)
        SliderButton.Position = UDim2.new((default - min) / (max - min), -5, 0, -7.5)
        SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SliderButton.Text = ""
        SliderButton.Parent = SliderBar
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = SliderButton
        
        local ValueLabel = Instance.new("TextLabel")
        ValueLabel.Size = UDim2.new(0, 30, 0, 20)
        ValueLabel.Position = UDim2.new(1, -30, 0, 0)
        ValueLabel.BackgroundTransparency = 1
        ValueLabel.Text = tostring(default)
        ValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        ValueLabel.Parent = Slider
        
        local dragging = false
        
        SliderButton.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
            end
        end)
        
        game:GetService("UserInputService").InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        
        game:GetService("RunService").RenderStepped:Connect(function()
            if dragging then
                local mousePosition = game:GetService("UserInputService"):GetMouseLocation()
                local sliderPosition = SliderBar.AbsolutePosition
                local sliderSize = SliderBar.AbsoluteSize
                
                local relativeX = math.clamp((mousePosition.X - sliderPosition.X) / sliderSize.X, 0, 1)
                SliderButton.Position = UDim2.new(relativeX, -5, 0, -7.5)
                
                local value = math.floor(min + (max - min) * relativeX)
                ValueLabel.Text = tostring(value)
                callback(value)
            end
        end)
    end
    
    -- Tạo Label
    function Tab:CreateLabel(text)
        local Label = Instance.new("TextLabel")
        Label.Name = text
        Label.Size = UDim2.new(1, -10, 0, 20)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.Parent = TabContent
    end
    
    -- Tạo Paragraph
    function Tab:CreateParagraph(text)
        local Paragraph = Instance.new("TextLabel")
        Paragraph.Name = "Paragraph"
        Paragraph.Size = UDim2.new(1, -10, 0, 0)
        Paragraph.BackgroundTransparency = 1
        Paragraph.Text = text
        Paragraph.TextColor3 = Color3.fromRGB(255, 255, 255)
        Paragraph.TextXAlignment = Enum.TextXAlignment.Left
        Paragraph.TextYAlignment = Enum.TextYAlignment.Top
        Paragraph.TextWrapped = true
        Paragraph.Parent = TabContent
        
        Paragraph.Size = UDim2.new(1, -10, 0, Paragraph.TextBounds.Y)
    end
    
    -- Tạo Dropdown
    function Tab:CreateDropdown(text, options, callback)
        local Dropdown = Instance.new("Frame")
        Dropdown.Name = text
        Dropdown.Size = UDim2.new(1, -10, 0, 30)
        Dropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Dropdown.Parent = TabContent
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = Dropdown
        
        local DropdownButton = Instance.new("TextButton")
        DropdownButton.Name = "DropdownButton"
        DropdownButton.Size = UDim2.new(1, 0, 1, 0)
        DropdownButton.BackgroundTransparency = 1
        DropdownButton.Text = text
        DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        DropdownButton.Parent = Dropdown
        
        local OptionsFrame = Instance.new("Frame")
        OptionsFrame.Name = "OptionsFrame"
        OptionsFrame.Size = UDim2.new(1, 0, 0, #options * 25)
        OptionsFrame.Position = UDim2.new(0, 0, 1, 5)
        OptionsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        OptionsFrame.Visible = false
        OptionsFrame.Parent = Dropdown
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = OptionsFrame
        
        for i, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Name = option
            OptionButton.Size = UDim2.new(1, 0, 0, 25)
            OptionButton.Position = UDim2.new(0, 0, 0, (i-1) * 25)
            OptionButton.BackgroundTransparency = 1
            OptionButton.Text = option
            OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OptionButton.Parent = OptionsFrame
            
            OptionButton.MouseButton1Click:Connect(function()
                DropdownButton.Text = text .. ": " .. option
                OptionsFrame.Visible = false
                callback(option)
            end)
        end
        
        DropdownButton.MouseButton1Click:Connect(function()
            OptionsFrame.Visible = not OptionsFrame.Visible
        end)
    end
    
    return Tab
end

-- Tạo thông báo cho người dùng
function Library:Notify(text, duration)
    local Notification = Instance.new("Frame")
    Notification.Name = "Notification"
    Notification.Size = UDim2.new(0, 200, 0, 50)
    Notification.Position = UDim2.new(1, -220, 1, -70)
    Notification.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Notification.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = Notification
    
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Size = UDim2.new(1, -10, 1, -10)
    TextLabel.Position = UDim2.new(0, 5, 0, 5)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Text = text
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextWrapped = true
    TextLabel.Parent = Notification
    
    game:GetService("TweenService"):Create(Notification, TweenInfo.new(0.5), {Position = UDim2.new(1, -220, 1, -70)}):Play()
    wait(duration or 3)
    game:GetService("TweenService"):Create(Notification, TweenInfo.new(0.5), {Position = UDim2.new(1, 20, 1, -70)}):Play()
    wait(0.5)
    Notification:Destroy()
end

-- Thiết lập phím tắt để ẩn/hiện GUI
local minimized = false
local TabContainer = MainFrame:FindFirstChild("TabContainer")
local TabContent = MainFrame:FindFirstChild("TabContent")

MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        MainFrame:TweenSize(UDim2.new(0, 400, 0, 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)
        if TabContainer then TabContainer.Visible = false end
        if TabContent then TabContent.Visible = false end
        for _, tab in ipairs(Tabs) do
            tab.Visible = false
        end
    else
        MainFrame:TweenSize(UDim2.new(0, 400, 0, 300), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)
        if TabContainer then TabContainer.Visible = true end
        if TabContent then TabContent.Visible = true end
        for _, tab in ipairs(Tabs) do
            if tab.Name == TabButtons[1].Name then
                tab.Visible = true
            end
        end
    end
end)

-- Phím tắt F1 để ẩn/hiện GUI
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F1 and not gameProcessed then
        MainFrame.Visible = not MainFrame.Visible
    end
end)

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TopBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TopBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

return Library
